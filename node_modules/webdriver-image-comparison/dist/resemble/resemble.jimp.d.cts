declare function _exports(fileData: any): {
    onComplete: (callback: any) => void;
    compareTo: (secondFileData: any) => {
        setReturnEarlyThreshold: (threshold: any) => /*elided*/ any;
        scaleToSameSize: () => /*elided*/ any;
        useOriginalSize: () => /*elided*/ any;
        ignoreNothing: () => /*elided*/ any;
        ignoreLess: () => /*elided*/ any;
        ignoreAntialiasing: () => /*elided*/ any;
        ignoreColors: () => /*elided*/ any;
        ignoreAlpha: () => /*elided*/ any;
        repaint: () => /*elided*/ any;
        outputSettings: (options: any) => /*elided*/ any;
        onComplete: (callback: any) => /*elided*/ any;
        setupCustomTolerance: (customSettings: any) => void;
    };
    outputSettings: (options: any) => /*elided*/ any;
};
declare namespace _exports {
    export function compare(image1: any, image2: any, options: any): Promise<any>;
    export { setGlobalOutputSettings as outputSettings };
}
export = _exports;
declare function setGlobalOutputSettings(settings: any): {
    (fileData: any): {
        onComplete: (callback: any) => void;
        compareTo: (secondFileData: any) => {
            setReturnEarlyThreshold: (threshold: any) => /*elided*/ any;
            scaleToSameSize: () => /*elided*/ any;
            useOriginalSize: () => /*elided*/ any;
            ignoreNothing: () => /*elided*/ any;
            ignoreLess: () => /*elided*/ any;
            ignoreAntialiasing: () => /*elided*/ any;
            ignoreColors: () => /*elided*/ any;
            ignoreAlpha: () => /*elided*/ any;
            repaint: () => /*elided*/ any;
            outputSettings: (options: any) => /*elided*/ any;
            onComplete: (callback: any) => /*elided*/ any;
            setupCustomTolerance: (customSettings: any) => void;
        };
        outputSettings: (options: any) => /*elided*/ any;
    };
    compare(image1: any, image2: any, options: any): Promise<any>;
    outputSettings: (settings: any) => /*elided*/ any;
};
//# sourceMappingURL=resemble.jimp.d.cts.map